{"ast":null,"code":"var _jsxFileName = \"C:\\\\BackendFile\\\\youtube\\\\frontend\\\\src\\\\components\\\\UserVideo\\\\video.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserVideo = ({\n  sideNavbar = true\n}) => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchVideo = async () => {\n    try {\n      var _video, _video$user;\n      const response = await axios.get('http://localhost:4000/api/userVideo', {\n        withCredentials: true\n      });\n      console.log(response);\n      if (response.data && response.data.videos) {\n        setVideos(response.data.videos);\n      } else {\n        throw new Error(\"Invalid API response structure\");\n      }\n      console.log((_video = video) === null || _video === void 0 ? void 0 : (_video$user = _video.user) === null || _video$user === void 0 ? void 0 : _video$user.profilePic);\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n      setError(\"Unable to load videos. Please try again later.\");\n    }\n  };\n  useEffect(() => {\n    fetchVideo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: sideNavbar ? 'homePage' : 'fullHomePage',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homePage_options\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"homePage_option\",\n        children: \"Your Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: sideNavbar ? 'home_mainPage' : 'fullHome_mainPage',\n      children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessage\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this) : videos.length > 0 ? videos.map(video => {\n        var _video$user2, _video$user3;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/watch/${video._id}`,\n          className: \"youtube_Video\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"youtube_thumbnailBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.thumbnail || 'https://via.placeholder.com/300x180?text=No+Thumbnail',\n              alt: \"Thumbnail\",\n              className: \"youtube_thumbnailPic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtube_timingThumbnail\",\n              children: video.duration || '00:00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"youtubeTitleBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtubeTitleBoxProfile\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: video === null || video === void 0 ? void 0 : (_video$user2 = video.user) === null || _video$user2 === void 0 ? void 0 : _video$user2.profilePic,\n                alt: \"Profile\",\n                className: \"youtube_thumbnail_profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtubeTitleBox_title\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube_videoTitle\",\n                children: (video === null || video === void 0 ? void 0 : video.title) || 'Untitled'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube_channelName\",\n                children: (video === null || video === void 0 ? void 0 : (_video$user3 = video.user) === null || _video$user3 === void 0 ? void 0 : _video$user3.channelName) || 'Unknown Channel'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube_videoViews\",\n                children: [(video === null || video === void 0 ? void 0 : video.like) || 0, \" likes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, video._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No videos available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(UserVideo, \"DCdHWl4in+7LUQSLdiqbkOKBD18=\");\n_c = UserVideo;\nexport default UserVideo;\nvar _c;\n$RefreshReg$(_c, \"UserVideo\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","jsxDEV","_jsxDEV","UserVideo","sideNavbar","_s","videos","setVideos","error","setError","fetchVideo","_video","_video$user","response","get","withCredentials","console","log","data","Error","video","user","profilePic","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_video$user2","_video$user3","to","_id","src","thumbnail","alt","duration","title","channelName","like","_c","$RefreshReg$"],"sources":["C:/BackendFile/youtube/frontend/src/components/UserVideo/video.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst UserVideo = ({ sideNavbar = true }) => {\r\n    const [videos, setVideos] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchVideo = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:4000/api/userVideo', {\r\n                withCredentials: true,\r\n            });\r\n            console.log(response);\r\n            if (response.data && response.data.videos) {\r\n                setVideos(response.data.videos);\r\n            } else {\r\n                throw new Error(\"Invalid API response structure\");\r\n            }\r\n            console.log(video?.user?.profilePic);\r\n        } catch (error) {\r\n            console.error('Error fetching videos:', error);\r\n            setError(\"Unable to load videos. Please try again later.\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchVideo();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={sideNavbar ? 'homePage' : 'fullHomePage'}>\r\n            <div className=\"homePage_options\">\r\n                <div className=\"homePage_option\">Your Videos</div>\r\n            </div>\r\n\r\n            <div className={sideNavbar ? 'home_mainPage' : 'fullHome_mainPage'}>\r\n                {error ? (\r\n                    <div className=\"errorMessage\">{error}</div>\r\n                ) : videos.length > 0 ? (\r\n                    videos.map((video) => (\r\n                        <Link key={video._id} to={`/watch/${video._id}`} className=\"youtube_Video\">\r\n                            <div className=\"youtube_thumbnailBox\">\r\n                                <img\r\n                                    src={video.thumbnail || 'https://via.placeholder.com/300x180?text=No+Thumbnail'}\r\n                                    alt=\"Thumbnail\"\r\n                                    className=\"youtube_thumbnailPic\"\r\n                                />\r\n                                <div className=\"youtube_timingThumbnail\">{video.duration || '00:00'}</div>\r\n                            </div>\r\n                            <div className=\"youtubeTitleBox\">\r\n                                <div className=\"youtubeTitleBoxProfile\">\r\n                                    <img\r\n                                        src={video?.user?.profilePic}\r\n                                        alt=\"Profile\"\r\n                                        className=\"youtube_thumbnail_profile\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"youtubeTitleBox_title\">\r\n                                    <div className=\"youtube_videoTitle\">{video?.title || 'Untitled'}</div>\r\n                                    <div className=\"youtube_channelName\">{video?.user?.channelName || 'Unknown Channel'}</div>\r\n                                    <div className=\"youtube_videoViews\">{video?.like || 0} likes</div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))\r\n                ) : (\r\n                    <div>No videos available</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserVideo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}