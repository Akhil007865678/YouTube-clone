{"ast":null,"code":"var _jsxFileName = \"C:\\\\BackendFile\\\\youtube\\\\frontend\\\\src\\\\Pages\\\\UploadShorts\\\\shortsUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './shoUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShortsUpload = () => {\n  _s();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [videoType, setVideoType] = useState('');\n  const [thumbnail, setThumbnail] = useState(null);\n  const [video, setVideo] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleImageChange = e => {\n    setThumbnail(e.target.files[0]);\n  };\n  const handleVideoChange = e => {\n    setVideo(e.target.files[0]);\n  };\n  const token = localStorage.getItem('token');\n  console.log(token);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!video || !thumbnail) {\n      setMessage('Please select both a video and a thumbnail.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('description', description);\n    formData.append('videoType', videoType);\n    formData.append('thumbnail', thumbnail);\n    formData.append('video', video);\n    try {\n      const response = await axios.post('http://localhost:4000/api/videoupload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        withCredentials: true\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage('Error uploading video');\n      console.error('Error uploading video:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoUpload\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadVideoTitle\",\n          children: [/*#__PURE__*/_jsxDEV(YouTubeIcon, {\n            sx: {\n              fontSize: \"54px\",\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), \"Upload Video\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title of video\",\n            onChange: e => setTitle(e.target.value),\n            value: title,\n            className: \"uploadFormInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            onChange: e => setDescription(e.target.value),\n            value: description,\n            className: \"uploadFormInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Category\",\n            onChange: e => setVideoType(e.target.value),\n            value: videoType,\n            className: \"uploadFormInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Thumbnail\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Video\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"video/mp4, video/webm, video/*\",\n              onChange: handleVideoChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadBtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadBtn_form\",\n            onClick: handleSubmit,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadBtn_form\",\n            onClick: () => navigate('/'),\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ShortsUpload, \"CKpNBYS5sAXH7VKgo20YSKFrsi4=\", false, function () {\n  return [useNavigate];\n});\n_c = ShortsUpload;\nexport default ShortsUpload;\nvar _c;\n$RefreshReg$(_c, \"ShortsUpload\");","map":{"version":3,"names":["React","useState","YouTubeIcon","axios","useNavigate","jsxDEV","_jsxDEV","ShortsUpload","_s","navigate","title","setTitle","description","setDescription","videoType","setVideoType","thumbnail","setThumbnail","video","setVideo","message","setMessage","handleImageChange","e","target","files","handleVideoChange","token","localStorage","getItem","console","log","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","withCredentials","data","error","children","className","sx","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","value","accept","onClick","_c","$RefreshReg$"],"sources":["C:/BackendFile/youtube/frontend/src/Pages/UploadShorts/shortsUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './shoUpload.css';\r\n\r\nconst ShortsUpload = () => {\r\n    const navigate = useNavigate();\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [videoType, setVideoType] = useState('');\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n    const [video, setVideo] = useState(null);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleImageChange = (e) => {\r\n        setThumbnail(e.target.files[0]);\r\n    };\r\n\r\n    const handleVideoChange = (e) => {\r\n        setVideo(e.target.files[0]);\r\n    };\r\n    const token = localStorage.getItem('token');\r\n    console.log(token);\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (!video || !thumbnail) {\r\n            setMessage('Please select both a video and a thumbnail.');\r\n            return;\r\n          }\r\n          \r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        formData.append('description', description);\r\n        formData.append('videoType', videoType);\r\n        formData.append('thumbnail', thumbnail);\r\n        formData.append('video', video);\r\n        \r\n        try {\r\n          const response = await axios.post('http://localhost:4000/api/videoupload', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n            withCredentials: true,\r\n          });\r\n          setMessage(response.data.message);\r\n        } catch (error) {\r\n          setMessage('Error uploading video');\r\n          console.error('Error uploading video:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='videoUpload'>\r\n                <div className='uploadBox'>\r\n                    <div className='uploadVideoTitle'>\r\n                        <YouTubeIcon sx={{ fontSize: \"54px\", color: \"red\" }} />\r\n                        Upload Video\r\n                    </div>\r\n                    <div className='uploadForm'>\r\n                        <input\r\n                            type='text'\r\n                            placeholder='Title of video'\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            value={title}\r\n                            className='uploadFormInput'\r\n                        />\r\n                        <input\r\n                            type='text'\r\n                            placeholder='Description'\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            value={description}\r\n                            className='uploadFormInput'\r\n                        />\r\n                        <input\r\n                            type='text'\r\n                            placeholder='Category'\r\n                            onChange={(e) => setVideoType(e.target.value)}\r\n                            value={videoType}\r\n                            className='uploadFormInput'\r\n                        />\r\n                        <div>\r\n                            Thumbnail\r\n                            <input\r\n                                type='file'\r\n                                accept='image/*'\r\n                                onChange={handleImageChange}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            Video\r\n                            <input\r\n                                type='file'\r\n                                accept='video/mp4, video/webm, video/*'\r\n                                onChange={handleVideoChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='uploadBtn'>\r\n                        <div className='uploadBtn_form' onClick={handleSubmit}>Upload</div>\r\n                        <div className='uploadBtn_form' onClick={() => navigate('/')}>Home</div>\r\n                    </div>\r\n                </div>\r\n                {message && <p>{message}</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShortsUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}