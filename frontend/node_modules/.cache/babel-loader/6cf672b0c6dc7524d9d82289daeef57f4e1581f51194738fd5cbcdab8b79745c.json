{"ast":null,"code":"var _jsxFileName = \"C:\\\\BackendFile\\\\youtube\\\\frontend\\\\src\\\\Pages\\\\VideoUpload\\\\videoUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport axios from 'axios';\nimport './videoUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoUpload = () => {\n  _s();\n  const [inputField, setInputField] = useState({\n    title: \"\",\n    description: \"\",\n    videoType: \"\"\n  });\n  const [videoFile, setVideoFile] = useState(null);\n  const [thumbnailFile, setThumbnailFile] = useState(null);\n  const handleOnChangeInput = (event, name) => {\n    setInputField({\n      ...inputField,\n      [name]: event.target.value\n    });\n  };\n  const handleFileChange = (event, type) => {\n    const file = event.target.files[0];\n    if (type === \"video\") setVideoFile(file);else if (type === \"thumbnail\") setThumbnailFile(file);\n  };\n  const handleSubmit = async () => {\n    const formData = new FormData();\n    formData.append(\"title\", inputField.title);\n    formData.append(\"description\", inputField.description);\n    formData.append(\"videoType\", inputField.videoType);\n    formData.append(\"video\", videoFile);\n    formData.append(\"thumbnail\", thumbnailFile);\n    try {\n      const response = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Upload successful\", response.data);\n    } catch (error) {\n      console.error(\"Upload error\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoUpload\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadVideoTitle\",\n        children: [/*#__PURE__*/_jsxDEV(YouTubeIcon, {\n          sx: {\n            fontSize: \"54px\",\n            color: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), \"Upload Video\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title of video\",\n          onChange: e => handleOnChangeInput(e, \"title\"),\n          value: inputField.title,\n          className: \"uploadFormInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          onChange: e => handleOnChangeInput(e, \"description\"),\n          value: inputField.description,\n          className: \"uploadFormInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Category\",\n          onChange: e => handleOnChangeInput(e, \"videoType\"),\n          value: inputField.videoType,\n          className: \"uploadFormInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Thumbnail\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => handleFileChange(e, \"thumbnail\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Video\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"video/mp4, video/webm, video/*\",\n            onChange: e => handleFileChange(e, \"video\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadBtn_form\",\n          onClick: handleSubmit,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadBtn_form\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoUpload, \"7qDe3AAE+Q/b7MWgyjgE5affeEc=\");\n_c = VideoUpload;\nexport default VideoUpload;\nvar _c;\n$RefreshReg$(_c, \"VideoUpload\");","map":{"version":3,"names":["React","useState","YouTubeIcon","axios","jsxDEV","_jsxDEV","VideoUpload","_s","inputField","setInputField","title","description","videoType","videoFile","setVideoFile","thumbnailFile","setThumbnailFile","handleOnChangeInput","event","name","target","value","handleFileChange","type","file","files","handleSubmit","formData","FormData","append","response","post","headers","console","log","data","error","className","children","sx","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","accept","onClick","_c","$RefreshReg$"],"sources":["C:/BackendFile/youtube/frontend/src/Pages/VideoUpload/videoUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport axios from 'axios';\r\nimport './videoUpload.css';\r\n\r\nconst VideoUpload = () => {\r\n    const [inputField, setInputField] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        videoType: \"\"\r\n    });\r\n    const [videoFile, setVideoFile] = useState(null);\r\n    const [thumbnailFile, setThumbnailFile] = useState(null);\r\n\r\n    const handleOnChangeInput = (event, name) => {\r\n        setInputField({\r\n            ...inputField,\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (event, type) => {\r\n        const file = event.target.files[0];\r\n        if (type === \"video\") setVideoFile(file);\r\n        else if (type === \"thumbnail\") setThumbnailFile(file);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const formData = new FormData();\r\n        formData.append(\"title\", inputField.title);\r\n        formData.append(\"description\", inputField.description);\r\n        formData.append(\"videoType\", inputField.videoType);\r\n        formData.append(\"video\", videoFile);\r\n        formData.append(\"thumbnail\", thumbnailFile);\r\n\r\n        try {\r\n            const response = await axios.post(\"/upload\", formData, {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            });\r\n            console.log(\"Upload successful\", response.data);\r\n        } catch (error) {\r\n            console.error(\"Upload error\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='videoUpload'>\r\n            <div className='uploadBox'>\r\n                <div className='uploadVideoTitle'>\r\n                    <YouTubeIcon sx={{ fontSize: \"54px\", color: \"red\" }} />\r\n                    Upload Video\r\n                </div>\r\n                <div className='uploadForm'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Title of video'\r\n                        onChange={(e) => handleOnChangeInput(e, \"title\")}\r\n                        value={inputField.title}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Description'\r\n                        onChange={(e) => handleOnChangeInput(e, \"description\")}\r\n                        value={inputField.description}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Category'\r\n                        onChange={(e) => handleOnChangeInput(e, \"videoType\")}\r\n                        value={inputField.videoType}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <div>\r\n                        Thumbnail\r\n                        <input\r\n                            type='file'\r\n                            accept='image/*'\r\n                            onChange={(e) => handleFileChange(e, \"thumbnail\")}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Video\r\n                        <input\r\n                            type='file'\r\n                            accept='video/mp4, video/webm, video/*'\r\n                            onChange={(e) => handleFileChange(e, \"video\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='uploadBtn'>\r\n                    <div className='uploadBtn_form' onClick={handleSubmit}>Upload</div>\r\n                    <div className='uploadBtn_form'>Home</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}