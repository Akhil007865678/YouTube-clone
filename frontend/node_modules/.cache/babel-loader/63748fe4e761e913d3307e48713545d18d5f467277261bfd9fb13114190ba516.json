{"ast":null,"code":"var _jsxFileName = \"C:\\\\BackendFile\\\\youtube\\\\frontend\\\\src\\\\Pages\\\\VideoUpload\\\\videoUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport axios from 'axios';\nimport './videoUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videoUpload = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [videoType, setVideoType] = useState('');\n  const [thumbnail, setThumbnail] = useState(null);\n  const [video, setVideo] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleImageChange = e => {\n    setThumbnail(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', setTitle);\n    formData.append('description', setDescription);\n    formData.append('videoType', setVideoType);\n    formData.append('thumbnail', setThumbnail);\n    formData.append('video', setVideo);\n    try {\n      const response = await axios.post('http://localhost:4000/api/video', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage('Error uploading product');\n      console.error('Error uploading product:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoUpload\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadVideoTitle\",\n          children: [/*#__PURE__*/_jsxDEV(YouTubeIcon, {\n            sx: {\n              fontSize: \"54px\",\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), \"Upload Video\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title of video\",\n            onChange: e => setTitle(e.target.value),\n            value: title,\n            className: \"uploadFormInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            onChange: e => setDescription(e.target.value),\n            value: description,\n            className: \"uploadFormInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Category\",\n            onChange: e => setVideoType(e.target.value),\n            value: videoType,\n            className: \"uploadFormInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Thumbnail\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Video\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"video/mp4, video/webm, video/*\",\n              onChange: handleVideoChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadBtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadBtn_form\",\n            onClick: handleSubmit,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploadBtn_form\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(videoUpload, \"jtEYSpVd6pwMSivr02fxUusIkGo=\");\nexport default videoUpload;","map":{"version":3,"names":["React","useState","YouTubeIcon","axios","jsxDEV","_jsxDEV","videoUpload","_s","title","setTitle","description","setDescription","videoType","setVideoType","thumbnail","setThumbnail","video","setVideo","message","setMessage","handleImageChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","error","console","children","className","sx","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","value","accept","handleVideoChange","onClick"],"sources":["C:/BackendFile/youtube/frontend/src/Pages/VideoUpload/videoUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport axios from 'axios';\r\nimport './videoUpload.css';\r\n\r\nconst videoUpload = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [videoType, setVideoType] = useState('');\r\n    const [thumbnail, setThumbnail] = useState(null);\r\n    const [video, setVideo] = useState(null);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleImageChange = (e) => {\r\n        setThumbnail(e.target.files[0]);\r\n      };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        const formData = new FormData();\r\n        formData.append('title', setTitle);\r\n        formData.append('description', setDescription);\r\n        formData.append('videoType', setVideoType);\r\n        formData.append('thumbnail', setThumbnail);\r\n        formData.append('video', setVideo);\r\n    \r\n        try {\r\n          const response = await axios.post('http://localhost:4000/api/video', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n          setMessage(response.data.message);\r\n        } catch (error) {\r\n          setMessage('Error uploading product');\r\n          console.error('Error uploading product:', error);\r\n        }\r\n      };\r\n  return (\r\n    <div>\r\n      <div className='videoUpload'>\r\n            <div className='uploadBox'>\r\n                <div className='uploadVideoTitle'>\r\n                    <YouTubeIcon sx={{ fontSize: \"54px\", color: \"red\" }} />\r\n                    Upload Video\r\n                </div>\r\n                <div className='uploadForm'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Title of video'\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        value={title}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Description'\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        value={description}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Category'\r\n                        onChange={(e) => setVideoType(e.target.value)}\r\n                        value={videoType}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <div>\r\n                        Thumbnail\r\n                        <input\r\n                            type='file'\r\n                            accept='image/*'\r\n                            onChange={handleImageChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Video\r\n                        <input\r\n                            type='file'\r\n                            accept='video/mp4, video/webm, video/*'\r\n                            onChange={handleVideoChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='uploadBtn'>\r\n                    <div className='uploadBtn_form' onClick={handleSubmit}>Upload</div>\r\n                    <div className='uploadBtn_form'>Home</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default videoUpload\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}