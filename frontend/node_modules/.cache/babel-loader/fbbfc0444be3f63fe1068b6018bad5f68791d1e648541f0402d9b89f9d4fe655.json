{"ast":null,"code":"var _jsxFileName = \"C:\\\\BackendFile\\\\youtube\\\\frontend\\\\src\\\\components\\\\Voice\\\\VoiceSearch.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceRecognitionContext = /*#__PURE__*/createContext();\nexport const useVoiceRecognition = () => {\n  _s();\n  return useContext(VoiceRecognitionContext);\n};\n_s(useVoiceRecognition, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst VoiceRecognitionProvider = ({\n  children\n}) => {\n  _s2();\n  const [isListening, setIsListening] = useState(false);\n  const [command, setCommand] = useState(\"\");\n  useEffect(() => {\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    const startListening = () => {\n      setIsListening(true);\n      recognition.start();\n    };\n    recognition.onresult = event => {\n      const spokenText = event.results[0][0].transcript.toLowerCase();\n      setIsListening(false);\n      handleVoiceCommand(spokenText); // Process the command\n    };\n    recognition.onerror = () => {\n      setIsListening(false);\n      console.error(\"Voice recognition error\");\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    const handleVoiceCommand = spokenText => {\n      if (spokenText.startsWith(\"hey youtube\")) {\n        const query = spokenText.slice(11).trim();\n        setCommand(query);\n        performAction(query); // Perform the action based on the query\n      } else {\n        console.warn(\"Unrecognized command:\", spokenText);\n      }\n    };\n    const performAction = query => {\n      // Example action: navigating or fetching data\n      if (query.startsWith(\"search\")) {\n        const searchTerm = query.replace(\"search\", \"\").trim();\n        window.location.href = `/search?query=${encodeURIComponent(searchTerm)}`;\n      } else if (query.startsWith(\"go to\")) {\n        const page = query.replace(\"go to\", \"\").trim();\n        const routes = {\n          home: \"/\",\n          profile: \"/profile\",\n          videos: \"/videos\"\n        };\n        window.location.href = routes[page] || \"/\";\n      } else {\n        console.log(\"No action defined for:\", query);\n      }\n    };\n    window.addEventListener(\"keydown\", e => {\n      if (e.key === \"v\" && e.ctrlKey) {\n        startListening();\n      }\n    });\n    return () => {\n      recognition.stop();\n      window.removeEventListener(\"keydown\", startListening);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(VoiceRecognitionContext.Provider, {\n    value: {\n      isListening,\n      command\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s2(VoiceRecognitionProvider, \"D+ixQ+iNJADJjDjRnFCexlnNJ3k=\");\n_c = VoiceRecognitionProvider;\nexport default VoiceRecognitionProvider;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecognitionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","VoiceRecognitionContext","useVoiceRecognition","_s","VoiceRecognitionProvider","children","_s2","isListening","setIsListening","command","setCommand","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","startListening","start","onresult","event","spokenText","results","transcript","toLowerCase","handleVoiceCommand","onerror","console","error","onend","startsWith","query","slice","trim","performAction","warn","searchTerm","replace","location","href","encodeURIComponent","page","routes","home","profile","videos","log","addEventListener","e","key","ctrlKey","stop","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/BackendFile/youtube/frontend/src/components/Voice/VoiceSearch.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst VoiceRecognitionContext = createContext();\r\n\r\nexport const useVoiceRecognition = () => useContext(VoiceRecognitionContext);\r\n\r\nconst VoiceRecognitionProvider = ({ children }) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [command, setCommand] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n    recognition.lang = \"en-US\";\r\n    recognition.interimResults = false;\r\n\r\n    const startListening = () => {\r\n      setIsListening(true);\r\n      recognition.start();\r\n    };\r\n\r\n    recognition.onresult = (event) => {\r\n      const spokenText = event.results[0][0].transcript.toLowerCase();\r\n      setIsListening(false);\r\n      handleVoiceCommand(spokenText); // Process the command\r\n    };\r\n\r\n    recognition.onerror = () => {\r\n      setIsListening(false);\r\n      console.error(\"Voice recognition error\");\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    const handleVoiceCommand = (spokenText) => {\r\n      if (spokenText.startsWith(\"hey youtube\")) {\r\n        const query = spokenText.slice(11).trim();\r\n        setCommand(query);\r\n        performAction(query); // Perform the action based on the query\r\n      } else {\r\n        console.warn(\"Unrecognized command:\", spokenText);\r\n      }\r\n    };\r\n\r\n    const performAction = (query) => {\r\n      // Example action: navigating or fetching data\r\n      if (query.startsWith(\"search\")) {\r\n        const searchTerm = query.replace(\"search\", \"\").trim();\r\n        window.location.href = `/search?query=${encodeURIComponent(searchTerm)}`;\r\n      } else if (query.startsWith(\"go to\")) {\r\n        const page = query.replace(\"go to\", \"\").trim();\r\n        const routes = { home: \"/\", profile: \"/profile\", videos: \"/videos\" };\r\n        window.location.href = routes[page] || \"/\";\r\n      } else {\r\n        console.log(\"No action defined for:\", query);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"v\" && e.ctrlKey) {\r\n        startListening();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      recognition.stop();\r\n      window.removeEventListener(\"keydown\", startListening);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <VoiceRecognitionContext.Provider value={{ isListening, command }}>\r\n      {children}\r\n    </VoiceRecognitionContext.Provider>\r\n  );\r\n};\r\n\r\nexport default VoiceRecognitionProvider;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}