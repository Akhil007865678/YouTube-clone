{"ast":null,"code":"var _jsxFileName = \"C:\\\\BackendFile\\\\youtube\\\\frontend\\\\src\\\\Pages\\\\SearchResult\\\\search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = sideNavbar => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [filter, setFilter] = use;\n  const fetchVideo = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/api/allvideo`);\n      const filtered = videos.filter(video => {\n        var _video$user, _video$user$channelNa;\n        return video.title.toLowerCase().includes(query) || ((_video$user = video.user) === null || _video$user === void 0 ? void 0 : (_video$user$channelNa = _video$user.channelName) === null || _video$user$channelNa === void 0 ? void 0 : _video$user$channelNa.toLowerCase().includes(query));\n      });\n      setFilteredVideos(filtered);\n      setVideos(response.data.videos);\n    } catch (error) {\n      console.log('Error fetching videos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchVideo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: sideNavbar ? 'home_mainPage' : 'fullHome_mainPage',\n      children: videos.length > 0 ? videos.map(video => {\n        var _video$user2, _video$user3;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/watch/${video._id}`,\n          className: \"youtube_Video\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"youtube_thumbnailBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.thumbnail || 'https://via.placeholder.com/300x180?text=No+Thumbnail',\n              alt: \"Thumbnail\",\n              className: \"youtube_thumbnailPic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtube_timingThumbnail\",\n              children: \"28:05\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"youtubeTitleBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtubeTitleBoxProfile\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (video === null || video === void 0 ? void 0 : (_video$user2 = video.user) === null || _video$user2 === void 0 ? void 0 : _video$user2.profilePic) || 'https://via.placeholder.com/50?text=No+Profile',\n                alt: \"Profile\",\n                className: \"youtube_thumbnail_profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"youtubeTitleBox_title\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube_videoTitle\",\n                children: (video === null || video === void 0 ? void 0 : video.title) || 'Untitled'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube_channelName\",\n                children: (video === null || video === void 0 ? void 0 : (_video$user3 = video.user) === null || _video$user3 === void 0 ? void 0 : _video$user3.channelName) || 'Unknown Channel'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"youtube_videoViews\",\n                children: [(video === null || video === void 0 ? void 0 : video.like) || 0, \" likes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, video._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No videos available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","Search","sideNavbar","_s","videos","setVideos","filter","setFilter","use","fetchVideo","response","get","filtered","video","_video$user","_video$user$channelNa","title","toLowerCase","includes","query","user","channelName","setFilteredVideos","data","error","console","log","children","className","length","map","_video$user2","_video$user3","to","_id","src","thumbnail","alt","fileName","_jsxFileName","lineNumber","columnNumber","profilePic","like","_c","$RefreshReg$"],"sources":["C:/BackendFile/youtube/frontend/src/Pages/SearchResult/search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './search.css';\r\n\r\nconst Search = (sideNavbar) => {\r\n    const [videos, setVideos] = useState([]);\r\n    const [filter, setFilter] = use\r\n\r\n    const fetchVideo = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:4000/api/allvideo`);\r\n            const filtered = videos.filter(\r\n              (video) =>\r\n                video.title.toLowerCase().includes(query) ||\r\n                video.user?.channelName?.toLowerCase().includes(query)\r\n            );\r\n            setFilteredVideos(filtered);\r\n            setVideos(response.data.videos);\r\n        } catch (error) {\r\n            console.log('Error fetching videos:', error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchVideo();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n           <div className={sideNavbar ? 'home_mainPage' : 'fullHome_mainPage'}>\r\n        {videos.length > 0 ? (\r\n          videos.map((video) => (\r\n            <Link key={video._id} to={`/watch/${video._id}`} className=\"youtube_Video\">\r\n              <div className=\"youtube_thumbnailBox\">\r\n                <img\r\n                  src={video.thumbnail || 'https://via.placeholder.com/300x180?text=No+Thumbnail'}\r\n                  alt=\"Thumbnail\"\r\n                  className=\"youtube_thumbnailPic\"\r\n                />\r\n                <div className=\"youtube_timingThumbnail\">28:05</div>\r\n              </div>\r\n              <div className=\"youtubeTitleBox\">\r\n                <div className=\"youtubeTitleBoxProfile\">\r\n                  <img\r\n                    src={video?.user?.profilePic || 'https://via.placeholder.com/50?text=No+Profile'}\r\n                    alt=\"Profile\"\r\n                    className=\"youtube_thumbnail_profile\"\r\n                  />\r\n                </div>\r\n                <div className=\"youtubeTitleBox_title\">\r\n                  <div className=\"youtube_videoTitle\">{video?.title || 'Untitled'}</div>\r\n                  <div className=\"youtube_channelName\">{video?.user?.channelName || 'Unknown Channel'}</div>\r\n                  <div className=\"youtube_videoViews\">{video?.like || 0} likes</div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <div>No videos available</div>\r\n        )}\r\n      </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}