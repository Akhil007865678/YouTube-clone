{"ast":null,"code":"var _jsxFileName = \"C:\\\\BackendFile\\\\youtube\\\\frontend\\\\src\\\\Pages\\\\VideoUpload\\\\videoUpload.js\";\n/*import React, { useState } from 'react';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport axios from 'axios';\r\nimport './videoUpload.css';\r\n\r\nconst VideoUpload = () => {\r\n    const [inputField, setInputField] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        videoType: \"\"\r\n    });\r\n    const [videoFile, setVideoFile] = useState(null);\r\n    const [thumbnailFile, setThumbnailFile] = useState(null);\r\n\r\n    const handleOnChangeInput = (event, name) => { \r\n        setInputField({\r\n            ...inputField,\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (event, type) => {\r\n        const file = event.target.files[0];\r\n        if (type === \"video\") setVideoFile(file);\r\n        else if (type === \"thumbnail\") setThumbnailFile(file);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!videoFile || !thumbnailFile) {\r\n            console.log(\"Please select both a video and a thumbnail.\");\r\n            return;\r\n        }\r\n    \r\n        const formData = new FormData();\r\n        formData.append(\"title\", inputField.title);\r\n        formData.append(\"description\", inputField.description);\r\n        formData.append(\"videoType\", inputField.videoType);\r\n        formData.append(\"video\", videoFile);\r\n        formData.append(\"thumbnail\", thumbnailFile);\r\n    \r\n        try {\r\n            // Retrieve token from local storage\r\n            const token = localStorage.getItem(\"token\"); // or however your token is stored\r\n    \r\n            const response = await axios.post(\"http://localhost:4000/api/video\", formData, {\r\n                headers: { \r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                    Authorization: `Bearer ${token}` // Attach token to Authorization header\r\n                }\r\n            });\r\n            console.log(\"Upload successful:\", response.data);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.error(\"Backend responded with an error:\", error.response.data);\r\n            } else if (error.request) {\r\n                console.error(\"Request made but no response received\", error.request);\r\n            } else {\r\n                console.error(\"Error in setting up request:\", error.message);\r\n            }\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className='videoUpload'>\r\n            <div className='uploadBox'>\r\n                <div className='uploadVideoTitle'>\r\n                    <YouTubeIcon sx={{ fontSize: \"54px\", color: \"red\" }} />\r\n                    Upload Video\r\n                </div>\r\n                <div className='uploadForm'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Title of video'\r\n                        onChange={(e) => handleOnChangeInput(e, \"title\")}\r\n                        value={inputField.title}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Description'\r\n                        onChange={(e) => handleOnChangeInput(e, \"description\")}\r\n                        value={inputField.description}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Category'\r\n                        onChange={(e) => handleOnChangeInput(e, \"videoType\")}\r\n                        value={inputField.videoType}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <div>\r\n                        Thumbnail\r\n                        <input\r\n                            type='file'\r\n                            accept='image/*'\r\n                            onChange={(e) => handleFileChange(e, \"thumbnail\")}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Video\r\n                        <input\r\n                            type='file'\r\n                            accept='video/mp4, video/webm, video/*'\r\n                            onChange={(e) => handleFileChange(e, \"video\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='uploadBtn'>\r\n                    <div className='uploadBtn_form' onClick={handleSubmit}>Upload</div>\r\n                    <div className='uploadBtn_form'>Home</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoUpload; */\n\nimport React, { useState } from 'react';\nimport YouTubeIcon from '@mui/icons-material/YouTube';\nimport { Link } from '';\nimport axios from 'axios';\nimport './videoUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoUpload = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoUpload\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploadBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadVideoTitle\",\n        children: [/*#__PURE__*/_jsxDEV(YouTubeIcon, {\n          sx: {\n            fontSize: \"54px\",\n            color: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), \"Upload Video\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title of video\",\n          className: \"uploadFormInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          className: \"uploadFormInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Category\",\n          className: \"uploadFormInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Thumbnail\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Video\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"video/mp4, video/webm, video/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploadBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadBtn_form\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploadBtn_form\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_c = VideoUpload;\nexport default VideoUpload;\nvar _c;\n$RefreshReg$(_c, \"VideoUpload\");","map":{"version":3,"names":["React","useState","YouTubeIcon","Link","axios","jsxDEV","_jsxDEV","VideoUpload","className","children","sx","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","accept","_c","$RefreshReg$"],"sources":["C:/BackendFile/youtube/frontend/src/Pages/VideoUpload/videoUpload.js"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport axios from 'axios';\r\nimport './videoUpload.css';\r\n\r\nconst VideoUpload = () => {\r\n    const [inputField, setInputField] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        videoType: \"\"\r\n    });\r\n    const [videoFile, setVideoFile] = useState(null);\r\n    const [thumbnailFile, setThumbnailFile] = useState(null);\r\n\r\n    const handleOnChangeInput = (event, name) => { \r\n        setInputField({\r\n            ...inputField,\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (event, type) => {\r\n        const file = event.target.files[0];\r\n        if (type === \"video\") setVideoFile(file);\r\n        else if (type === \"thumbnail\") setThumbnailFile(file);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!videoFile || !thumbnailFile) {\r\n            console.log(\"Please select both a video and a thumbnail.\");\r\n            return;\r\n        }\r\n    \r\n        const formData = new FormData();\r\n        formData.append(\"title\", inputField.title);\r\n        formData.append(\"description\", inputField.description);\r\n        formData.append(\"videoType\", inputField.videoType);\r\n        formData.append(\"video\", videoFile);\r\n        formData.append(\"thumbnail\", thumbnailFile);\r\n    \r\n        try {\r\n            // Retrieve token from local storage\r\n            const token = localStorage.getItem(\"token\"); // or however your token is stored\r\n    \r\n            const response = await axios.post(\"http://localhost:4000/api/video\", formData, {\r\n                headers: { \r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                    Authorization: `Bearer ${token}` // Attach token to Authorization header\r\n                }\r\n            });\r\n            console.log(\"Upload successful:\", response.data);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.error(\"Backend responded with an error:\", error.response.data);\r\n            } else if (error.request) {\r\n                console.error(\"Request made but no response received\", error.request);\r\n            } else {\r\n                console.error(\"Error in setting up request:\", error.message);\r\n            }\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className='videoUpload'>\r\n            <div className='uploadBox'>\r\n                <div className='uploadVideoTitle'>\r\n                    <YouTubeIcon sx={{ fontSize: \"54px\", color: \"red\" }} />\r\n                    Upload Video\r\n                </div>\r\n                <div className='uploadForm'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Title of video'\r\n                        onChange={(e) => handleOnChangeInput(e, \"title\")}\r\n                        value={inputField.title}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Description'\r\n                        onChange={(e) => handleOnChangeInput(e, \"description\")}\r\n                        value={inputField.description}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Category'\r\n                        onChange={(e) => handleOnChangeInput(e, \"videoType\")}\r\n                        value={inputField.videoType}\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <div>\r\n                        Thumbnail\r\n                        <input\r\n                            type='file'\r\n                            accept='image/*'\r\n                            onChange={(e) => handleFileChange(e, \"thumbnail\")}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Video\r\n                        <input\r\n                            type='file'\r\n                            accept='video/mp4, video/webm, video/*'\r\n                            onChange={(e) => handleFileChange(e, \"video\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='uploadBtn'>\r\n                    <div className='uploadBtn_form' onClick={handleSubmit}>Upload</div>\r\n                    <div className='uploadBtn_form'>Home</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoUpload; */\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\nimport {Link} from ''\r\nimport axios from 'axios';\r\nimport './videoUpload.css';\r\n\r\nconst VideoUpload = () => {\r\n    \r\n    \r\n    return (\r\n        <div className='videoUpload'>\r\n            <div className='uploadBox'>\r\n                <div className='uploadVideoTitle'>\r\n                    <YouTubeIcon sx={{ fontSize: \"54px\", color: \"red\" }} />\r\n                    Upload Video\r\n                </div>\r\n                <div className='uploadForm'>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Title of video'\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Description'\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Category'\r\n                        className='uploadFormInput'\r\n                    />\r\n                    <div>\r\n                        Thumbnail\r\n                        <input\r\n                            type='file'\r\n                            accept='image/*'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        Video\r\n                        <input\r\n                            type='file'\r\n                            accept='video/mp4, video/webm, video/*'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='uploadBtn'>\r\n                    <div className='uploadBtn_form'>Upload</div>\r\n                    <div className='uploadBtn_form'>Home</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoUpload;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}